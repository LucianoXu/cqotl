/- LEAN4 FILE AUTO GENERATED BY CQOTL PROVER FOR OBLIGATION: obligation_3 -/

import LeanVeri.Commons
import LeanVeri.LinearMapPropositions
import LeanVeri.ProjectionSubmodule

variable {𝕜 : Type*} [_inst : (RCLike 𝕜)]

local notation "𝕜²" => ((EuclideanSpace 𝕜) (Fin 2))

noncomputable def vplus  : 𝕜² := ketP

noncomputable def H  : 𝕜² →ₗ[𝕜] 𝕜² := Hadamard

lemma obligation_3  :
 ((LinearMap.LoewnerOrder ketbra0) ((H.adjoint * ((((outerProduct 𝕜) vplus) vplus) : 𝕜² →ₗ[𝕜] 𝕜²)) * H)) := by
   unfold H vplus
   rw [← ketbraP]
   rw [adjoint_Hadamard_mul_ketbraP_mul_Hadamard_eq_ketbra0, ketbra0]
   exact LinearMap.reflexive_LoewnerOrder (𝕜 := 𝕜) ketbra0
