/-
((((((lt @ i) @ m) /\ ((lt @ i') @ m)) /\ ((((x == x') /\ (i == i')) /\ (b == b')) /\ (((iADD @ x) @ b) == ((iADD @ x') @ b')))) -> ((((lt @ i) @ m) == ((lt @ i') @ m)) /\ ((((iADD @ x) @ b) == ((iADD @ x') @ b')) /\ (i == i')))) = true)
-/

/- LEAN4 FILE AUTO GENERATED BY CQOTL PROVER FOR PROOF OBLIGATIONS -/

import LeanVeri.Commons
import LeanVeri.LinearMapPropositions

variable {𝕜 : Type*} [_inst : (RCLike 𝕜)]

local notation "𝕜²" => ((EuclideanSpace 𝕜) (Fin 2))

def lt : ℤ → ℤ → Bool := sorry

def iAdd : ℤ → Bool → ℤ := sorry

lemma obligation (b b' : Bool) (x x' i i' m : ℤ) :
  ((lt i m = true) ∧ (lt i' m = true)) ∧ (((x = x' ∧ i = i') ∧ (b = b')) ∧ (iAdd x b = iAdd x' b')) → ((lt i m = lt i' m) ∧ ((iAdd x b = iAdd x' b') ∧ (i = i')))  :=
  by sorry
