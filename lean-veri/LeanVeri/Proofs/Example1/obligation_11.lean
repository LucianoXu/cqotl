/- LEAN4 FILE AUTO GENERATED BY CQOTL PROVER FOR OBLIGATION: obligation_11 -/

import LeanVeri.Commons
import LeanVeri.LinearMapPropositions
import LeanVeri.ProjectionSubmodule

variable {ùïú : Type*} [_inst : (RCLike ùïú)]

local notation "ùïú¬≤" => ((EuclideanSpace ùïú) (Fin 2))

<<<<<<< HEAD:lean-veri/LeanVeri/Examples/obligation_11.lean
def iadd  : (‚Ñ§ ‚Üí (Bool ‚Üí ‚Ñ§)) := sorry

def lt  : (‚Ñ§ ‚Üí (‚Ñ§ ‚Üí Bool)) := sorry
=======
def lt : (‚Ñ§ ‚Üí (‚Ñ§ ‚Üí Bool)) := fun x y ‚Ü¶ x < y
>>>>>>> 71997f0e07c6aed2287af76a5961d81bcbacc242:lean-veri/LeanVeri/Proofs/Example1/obligation_11.lean

/- This seems to be false -/
lemma obligation_11 (x' : ‚Ñ§) (x : ‚Ñ§) (i' : ‚Ñ§) (i : ‚Ñ§) (m : ‚Ñ§) :
<<<<<<< HEAD:lean-veri/LeanVeri/Examples/obligation_11.lean
 ‚àÄ (H0 : ((¬¨ ((((lt ((iadd i) true)) m) = ((lt ((iadd i') true)) m)) ‚àß ((x = x') ‚àß (((iadd i) true) = ((iadd i') true))))) = true)), ((¬¨ ((((lt i) m) = ((lt i') m)) ‚àß ((x = x') ‚àß (i = i')))) = true) := sorry
=======
    ((¬¨ ((((lt i) m) = ((lt i') m)) ‚àß ((x = x') ‚àß (i = i')))) = true) := by
  sorry
  
>>>>>>> 71997f0e07c6aed2287af76a5961d81bcbacc242:lean-veri/LeanVeri/Proofs/Example1/obligation_11.lean
