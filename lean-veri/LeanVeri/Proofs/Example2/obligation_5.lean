/- LEAN4 FILE AUTO GENERATED BY CQOTL PROVER FOR OBLIGATION: obligation_5 -/
/- Proof by Iván Renison -/

import LeanVeri.Commons
import LeanVeri.LinearMapPropositions
import LeanVeri.ProjectionSubmodule

variable {𝕜 : Type*} [_inst : (RCLike 𝕜)]

local notation "𝕜²" => ((EuclideanSpace 𝕜) (Fin 2))

def mu : Bool → 𝕜
  | _ => 1/2

def P0 : 𝕜² →ₗ[𝕜] 𝕜² := ketbra0

lemma obligation_5 :
    ∀ (rho : 𝕜² →ₗ[𝕜] 𝕜²), ∀ (pfspace : ((LinearMap.toSubmodule rho) ≤ (LinearMap.toSubmodule 0))),
      rho.isDensityOperator →
      ((((LinearMap.trace 𝕜) 𝕜²) (P0 * rho)) = (mu false)) := by
  intro rho pfspace h1
  rw [LinearMap.toSubmodule_zero] at pfspace
  have pfspace' : rho = 0 := LinearMap.eq_zero_of_toSubmodule_le_bot rho pfspace
  rw [pfspace'] at h1
  unfold LinearMap.isDensityOperator at h1
  have h1' := h1.right
  rw [LinearMap.map_zero (LinearMap.trace 𝕜 𝕜²)] at h1'
  simp at h1'
