(*************************************************************************)
(* This file holds the proof obligation examples in the LEAN_AST form    *)
(*************************************************************************)

open Lean_ast
open Lean_commons

let example1 : lean_file = {
  header  = Some "LEAN4 FILE AUTO GENERATED BY CQOTL PROVER FOR PROOF OBLIGATIONS";
  imports = [
    commonsImport;
    propositionImport;
  ];
  declarations = [
    declarationRCLikeK;
    notationDefEuclidean;
    hadamardDefinition;
    ketPlusDefinition;
    ket0Bra0Definition;
    ket1Bra1Definition;
    obligation (loewnerOrder ket0bra0_v (outerProduct (applyH ketPlus_v) (applyH ketPlus_v))) []
  ];
}

let example2 : lean_file = {
  header  = Some "LEAN4 FILE AUTO GENERATED BY CQOTL PROVER FOR PROOF OBLIGATIONS";
  imports = [
    commonsImport;
    propositionImport;
    projectionImport;
  ];
  declarations = [
    declarationRCLikeK;
    notationDefEuclidean;
    qubitMeasDistr "μ";
    ket0Bra0Definition;
    ketPBraPDefinition;
    obligation (equal (trace (mult ket0bra0_v (v "ρ1"))) (app (v "μ") (v "false"))) [densityOperator 1; hypothesis "h1" (isDensityOperator (v "ρ1"));  hypothesis "h2" (subspace (v "ρ1") ketPbraP_v);]
  ]
}

let example3 : lean_file = {
  header  = Some "LEAN4 FILE AUTO GENERATED BY CQOTL PROVER FOR PROOF OBLIGATIONS";
  imports = [
    commonsImport;
    propositionImport;
    projectionImport;
  ];
  declarations = [
    declarationRCLikeK;
    notationDefEuclidean;
    qubitMeasDistr "μ";
    ket1Bra1Definition;
    ketPBraPDefinition;
    obligation (equal (trace (mult ket1bra1_v (v "ρ1"))) (app (v "μ") (v "true"))) [densityOperator 1; hypothesis "h1" (isDensityOperator (v "ρ1"));  hypothesis "h2" (subspace (v "ρ1") ketPbraP_v);]
  ]
}

let examples : (lean_file * string) list = [
  (example1, "Obligation1-1.lean");
  (example2, "Obligation1-2.lean");
  (example3, "Obligation1-3.lean");
]

(* More examples for example 1-2 with while loop *)
(* Helper expressions for types *)
let example1_1 : lean_file  = {
  header  = Some "LEAN4 FILE AUTO GENERATED BY CQOTL PROVER FOR PROOF OBLIGATIONS";
  imports = [
    commonsImport;
    propositionImport;
  ];
  declarations = [
    functionDef "lt" (GenericRepr "ℤ → ℤ → Bool");
    obligation ()
 ]
}







